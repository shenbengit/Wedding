apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao' // apply plugin

android {
    signingConfigs {
        release {
            keyAlias 'wedding'
            keyPassword '123456'
            storeFile file('../wedding.jks')
            storePassword '123456'
        }
    }
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //ARouter
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }

        multiDexEnabled true

    }
    buildTypes {
        //开发环境
        debug {
            debuggable true
            //混淆代码的功能
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "isAutoUpdate", "false"
            manifestPlaceholders = [app_name: "@string/app_name_debug", app_icon: "@mipmap/ic_launcher_round"]
        }
        //测试环境
        for_test {
            debuggable true
            //混淆代码的功能
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "isAutoUpdate", "true"
            manifestPlaceholders = [app_name: "@string/app_name_test", app_icon: "@mipmap/ic_launcher_round"]
        }
        //生产环境
        release {
            debuggable false
            minifyEnabled true //混淆代码的功能
            shrinkResources true //是否清理无用资源,依赖于minifyEnabled
            zipAlignEnabled true //是否启用zipAlign压缩
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "isAutoUpdate", "false"
            manifestPlaceholders = [app_name: "@string/app_name", app_icon: "@mipmap/ic_launcher_round"]
        }
    }
    //使用DataBinding
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    //过滤掉提示重复的文件
    packagingOptions {
        exclude 'META-INF/proguard/androidx-annotations.pro'
    }

    sourceSets {
        main {
            // 将 jniLib 指向 libs
            jniLibs.srcDirs = ['libs']
        }
    }

    greendao {
        schemaVersion 1//数据库版本号
        targetGenDir 'src/main/java'//设置DaoMaster、DaoSession、Dao目录
        daoPackage 'com.example.wedding.greendao'//设置DaoMaster、DaoSession、Dao包名
        //targetGenDirTest：设置生成单元测试目录
        //generateTests：设置自动生成单元测试用例
    }

    useLibrary 'org.apache.http.legacy'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //noinspection GradleCompatible
    implementation "com.android.support:appcompat-v7:$rootProject.ext.android.supportVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.ext.android.supportVersion"
    implementation "com.android.support:design:$rootProject.ext.android.supportVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation rootProject.ext.dependencies["BaseRecyclerViewAdapterHelper"]
    implementation rootProject.ext.dependencies["fragmentation-core"]
    //    implementation rootProject.ext.dependencies["eventbus"]
    implementation(rootProject.ext.dependencies["permissionsdispatcher"]) {
        exclude module: 'support-v13'
        exclude group: 'com.android.support'
    }
    annotationProcessor rootProject.ext.dependencies["permissionsdispatcher-processor"]
    implementation rootProject.ext.dependencies["multidex"]
    implementation rootProject.ext.dependencies["logger"]
    implementation rootProject.ext.dependencies["glide"]
    annotationProcessor rootProject.ext.dependencies["glide-compiler"]
    implementation rootProject.ext.dependencies["arouter"]
    annotationProcessor rootProject.ext.dependencies["arouter-compiler"]
    implementation rootProject.ext.dependencies["retrofit2"]
    implementation rootProject.ext.dependencies["converter-gson"]
    implementation rootProject.ext.dependencies["adapter-rxjava2"]
    implementation rootProject.ext.dependencies["rxjava2"]
    implementation rootProject.ext.dependencies["rxandroid"]
    implementation rootProject.ext.dependencies["rxrelay"]
    implementation rootProject.ext.dependencies["logging-interceptor"]
    implementation rootProject.ext.dependencies["rxlifecycle-components"]
    implementation rootProject.ext.dependencies["lifecycle-extensions"]
    annotationProcessor rootProject.ext.dependencies["lifecycle-compiler"]
    implementation rootProject.ext.dependencies["rxbinding"]
    debugImplementation rootProject.ext.dependencies["debug-leakcanary"]
    releaseImplementation rootProject.ext.dependencies["release-leakcanary"]
    annotationProcessor rootProject.ext.dependencies["databinding-compiler"]
    implementation rootProject.ext.dependencies["bmob-sdk"]
    implementation rootProject.ext.dependencies["http-legacy"]
    implementation rootProject.ext.dependencies["banner"]
    implementation rootProject.ext.dependencies["greendao"]
    implementation rootProject.ext.dependencies["circleimageview"]
    implementation rootProject.ext.dependencies["ucrop"]
    implementation rootProject.ext.dependencies["Luban"]
    implementation rootProject.ext.dependencies["Android-PickerView"]
    implementation rootProject.ext.dependencies["BasePopup"]
}
